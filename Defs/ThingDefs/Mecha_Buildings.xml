<?xml version="1.0" encoding="utf-8" ?>
<ThingDefs>
  <ThingDef Name="BuildingBase" Abstract="True">
    <category>Building</category>
    <soundBulletHit>BulletImpactMetal</soundBulletHit>
    <selectable>true</selectable>
    <drawerType>MapMeshAndRealTime</drawerType>
    <surfaceNeeded>Light</surfaceNeeded>
    <constructionEffect>ConstructMetal</constructionEffect>
    <repairEffect>Repair</repairEffect>
  </ThingDef>

  <ThingDef ParentName="BuildingBase">
    <defName>Mecha_BuildingCentipede</defName>
    <eType>Building_Turret</eType>
    <label>Mechanoid Centipede</label>
    <thingClass>Mecha_BuildingCentipede</thingClass>
    <texturePath>Things/Building/Centipede</texturePath>
    <altitudeLayer>Waist</altitudeLayer>
    <maxHealth>800</maxHealth>
    <tickerType>Normal</tickerType>
    <comps>
      <li>
        <compClass>CompForbiddable</compClass>
      </li>
      <li>
        <compClass>CompPowerTrader</compClass>
        <basePowerConsumption>350</basePowerConsumption>
      </li>
    </comps>
    <description>A custom Mechanoid.</description>
    <flammability>1.0</flammability>
    <size>(2,3)</size>
    <passability>Impassable</passability>
    <castEdgeShadows>true</castEdgeShadows>
    <fillPercent>0.4</fillPercent>
    <costList>
      <li>
        <thingDef>Metal</thingDef>
        <count>500</count>
      </li>
      <li>
        <thingDef>MechaPart</thingDef>
        <count>10</count>
      </li>
    </costList>
    <workToBuild>1000</workToBuild>
    <overdraw>true</overdraw>
    <combatTargetBuilding>true</combatTargetBuilding>
    <beauty>Ugly</beauty>
    <filthLeavings>
      <li>
        <thingDef>SlagRubble</thingDef>
        <count>1</count>
      </li>
    </filthLeavings>
    <leaveResourcesWhenKilled>true</leaveResourcesWhenKilled>
    <surfaceNeeded>Light</surfaceNeeded>
    <designationCategory>Security</designationCategory>
    <placingDisplayRadius>25.9</placingDisplayRadius>
    <designationHotKey>U</designationHotKey>
    <researchPrerequisite>Mechatronics</researchPrerequisite>
  </ThingDef>
</ThingDefs>